//
//  Gem.m
//  Chainz
//
//  Created by Pedro Gomes on 12/13/11.
//  Copyright (c) 2011 Phluid Labs. All rights reserved.
//

#import "Gem.h"

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
@implementation Gem

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
@synthesize kind 		= _kind;
@synthesize gemColor 	= _color;
@synthesize attributes	= _attributes;
@synthesize point		= _point;

#pragma mark - Dealloc and Initialization
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
- (void)dealloc
{
	[super dealloc];
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
- (id)initWithGameboard:(Gameboard *)gameboard position:(CGPoint)point kind:(GemKind)kind
{
	return [self initWithGameboard:gameboard position:point kind:kind color:arc4random()%GemColorCount attributes:GemBoostNone];
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
- (id)initWithGameboard:(Gameboard *)gameboard position:(CGPoint)point kind:(GemKind)kind color:(GemColor)color
{
	return [self initWithGameboard:gameboard position:point kind:kind color:color attributes:GemBoostNone];
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
- (id)initWithGameboard:(Gameboard *)gameboard position:(CGPoint)point kind:(GemKind)kind color:(GemColor)color attributes:(GemAttribute)attribute
{
	if((self = [super init])) {
		// TODO: load the actual texture/image
		_gameboard 	= gameboard;
		_point 		= point;
		_color		= color;
		_attributes	= attribute;
	}
	return self;
}

#pragma mark - Public Methods

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
- (void)updatePosition:(CGPoint)point
{
	
}

@end
